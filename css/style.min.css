/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */img,legend{border:0}*,legend,td,th{padding:0}*,body{margin:0}body,sub,sup{position:relative}.menu__box,.modal__form{-webkit-box-orient:vertical;-webkit-box-direction:normal}.about__slider,.about__text,.about__title,.home__btn-box,.home__title,.menu__item{text-align:center}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}.modal__form,.slick-dots{display:-webkit-box;display:-ms-flexbox}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{max-width:100%}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}table{border-collapse:collapse;border-spacing:0}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{font-family:Raleway,sans-serif;font-weight:400;font-size:16px;overflow-x:hidden}ul{list-style:none}h1,h2,h3,h4,h5,h6{margin-bottom:0;font-family:Montserrat,sans-serif;font-weight:700;font-size:45px;letter-spacing:.001;text-transform:uppercase}@media only screen and (max-width:824px){h1,h2,h3,h4,h5,h6{font-size:25px}}h2{font-size:38px;opacity:.9}@media only screen and (max-width:824px){h2{font-size:25px}}h3,h4{font-family:Merriweather,serif;font-size:20px}h4{font-size:17px}:hover{-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.about__slide{margin:0 auto;padding-bottom:20px}.slick-dots{display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.slick-dots li{margin-right:3px;width:10px;height:10px;border-radius:50%;background-color:#d0d0d0}.slick-dots button{font-size:0;border:none;background:0 0}.slick-dots li.slick-active{background:#71f6eb}.btn{padding:16px 45px;font-family:Montserrat,sans-serif;font-size:18px;line-height:1.5;letter-spacing:.006;border:1px solid #000;border-radius:0}.modal__btn-box{padding-top:200px;position:absolute;top:0;width:100%;height:100%;visibility:hidden;opacity:0;background-color:rgba(0,0,0,.6)}.modal__btn-box--is-active{visibility:visible;opacity:1;-webkit-transition:all .5s ease;-o-transition:all .5s ease;transition:all .5s ease}.blog__popup--is-active,.modal__menu{-webkit-transition:all .5s ease;-o-transition:all .5s ease}.modal__form{padding:30px 10px 20px;position:relative;display:flex;-ms-flex-direction:column;flex-direction:column;background-color:#fff}.modal__field,.modal__massage{margin-bottom:10px}.modal__button{width:50%;border:none;background-color:#71f6eb}.modal__button:hover{color:#fff}.menu__link,.menu__link:hover{color:rgba(0,0,0,.6)}@media only screen and (max-width:1024px){.modal__button{width:100%}}.modal__close-btn{position:absolute;top:-6%;right:4%;z-index:10;font-size:40px;border:none;background:0 0}.modal__menu{position:fixed;top:0;right:0;-webkit-transform:translate(100%,0);-ms-transform:translate(100%,0);transform:translate(100%,0);transition:all .5s ease}.modal__menu--is-active{-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0)}.menu__box{padding:60px 10px;width:200px;height:100vh;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#eff0f2}.menu__title{margin-bottom:20px;opacity:.8}.menu__item{margin-bottom:10px;width:180px;text-transform:capitalize;border-bottom:1px solid rgba(0,0,0,.1)}.menu__item:hover{border-bottom:1px solid rgba(0,0,0,.4)}.menu__item:last-child{padding-top:10px;border-bottom:none}.menu__link:hover{text-decoration:none}.menu__close{font-weight:700;font-size:20px;opacity:.6;outline:0;border:none;background:0 0;color:#000}.header{padding-top:60px}.header__background{background-color:#eff0f2}.header__btn-box{padding:15px 0 10px}.header__btn{border:none;background:0 0}.home__background{padding:190px 0;position:relative;background-color:#eff0f2}@media only screen and (max-width:1024px){.home__background{padding:90px 0 70px}}.home__title{margin-bottom:150px;text-shadow:4px 8px 10px rgba(0,0,0,.24)}.home__title--background{background-color:rgba(113,246,235,.5)}.home__btn:hover{background-color:#fff}.home__img{position:absolute;right:108px;bottom:-60px}@media only screen and (max-width:768px){.home__img{bottom:10%}}@media only screen and (max-width:824px){.home__background{padding:50px 0}.home__title{margin-bottom:50px}.home__img{right:0;bottom:10}}@media only screen and (max-width:415px){.home__img{display:none}}.card__unit,.works__img-box{display:-webkit-box;display:-ms-flexbox}.about__background{padding:125px 0 150px;background-color:#f8fafa}@media only screen and (max-width:1024px){.about__background{padding:70px 0}}.about__text{margin-bottom:125px;text-transform:uppercase;opacity:.62}@media only screen and (max-width:768px){.about__text{margin-bottom:60px}}.about__slider{background-image:url(../img/about-background.jpg);background-position:50% 40%;background-repeat:no-repeat}@media only screen and (max-width:768px){.about__slider{background-position:50% 12%;background-size:contain}}@media only screen and (max-width:824px){.about__background{padding:50px 0}.about__text{margin-bottom:30px}.about__slider{background-position:50% 35%}}.description__box{padding:20px 85px 0 40px}.description__title{margin-bottom:30px;opacity:.75}.description__text{margin-bottom:45px;opacity:.74}@media only screen and (max-width:768px){.description__box{padding:20px 10px 0 40px}.description__text:last-child{margin-bottom:0}}.description____subtitle{margin-bottom:30px;opacity:.75}.services__text,.works__text{opacity:.62;text-align:center;text-transform:uppercase}.works__background{padding:125px 0}@media only screen and (max-width:1024px){.works__background{padding:70px 0}}.works__title{text-align:center}@media only screen and (max-width:768px){.works__title{margin-bottom:5px}}.works__text{margin-bottom:120px}@media only screen and (max-width:768px){.works__text{margin-bottom:60px}}@media only screen and (max-width:824px){.works__background{padding:50px 0}.works__text{margin-bottom:30px}}.works__img-box{display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}.works__img{margin-bottom:15px;max-width:32.5%}@media only screen and (max-width:1024px){.works__img-box{-ms-flex-pack:distribute;justify-content:space-around}.works__img{max-width:50%}}@media only screen and (max-width:768px){.works__img{margin:0 auto 10px;max-width:100%}}.works__img:nth-child(3){margin-right:0}@media only screen and (max-width:768px){.works__img:nth-child(3){margin:0 auto 10px;max-width:100%}}.works__img:last-child{margin-right:0}@media only screen and (max-width:768px){.works__img:last-child{margin:0 auto 10px;max-width:100%}}.services__background{padding:125px 0;background-color:#f8fafa}@media only screen and (max-width:1024px){.services__background{padding:70px 0}}@media only screen and (max-width:824px){.services__background{padding:50px 0}}.services__title{text-align:center}.services__text{margin-bottom:120px}@media only screen and (max-width:1024px){.services__text{margin-bottom:80px}}@media only screen and (max-width:768px){.services__text{margin-bottom:50px}}.blog__box{width:100%;height:100%}.blog__img{margin-bottom:15px;position:relative}.blog__element,.blog__popup{height:96%;position:absolute;top:0}.blog__element{width:94%;padding:105px 85px 45px 55px;background-color:#000;opacity:.6;color:#fff}@media only screen and (max-width:1248px){.blog__element{padding:30px 85px 45px 55px}}@media only screen and (max-width:1024px){.blog__element{padding:20px}}@media only screen and (max-width:768px){.blog__element{padding:105px 85px 45px 55px}}@media only screen and (max-width:560px){.blog__element{padding:20px;overflow:scroll}}@media only screen and (max-width:415px){.blog__element{padding:10px;overflow:scroll}}.blog__element-big{width:95.5%}.blog__popup{visibility:hidden;opacity:0;width:95.5%;padding:60px 110px 150px 65px;z-index:10;background-color:#71f6eb}@media only screen and (max-width:1024px){.blog__popup{padding:10px;overflow:scroll}}@media only screen and (max-width:768px){.blog__popup{padding:50px 85px 45px 55px}}@media only screen and (max-width:560px){.blog__popup{padding:20px;overflow:scroll}}@media only screen and (max-width:415px){.blog__popup{padding:10px;overflow:scroll}}.blog__popup-small{padding:30px 30px 10px}@media only screen and (max-width:1024px){.blog__popup-small{padding:0;overflow:scroll}}@media only screen and (max-width:768px){.blog__popup-small{padding:50px 85px 45px 55px}}@media only screen and (max-width:560px){.blog__popup-small{padding:20px;overflow:scroll}}.blog__popup--is-active{visibility:visible;opacity:1;transition:all .5s ease}.blog__title{margin-bottom:25px;opacity:.95}@media only screen and (max-width:415px){.blog__popup-small{padding:10px;overflow:scroll}.blog__title{margin-bottom:5px}}.blog__title-top{margin-bottom:40px;opacity:.83}@media only screen and (max-width:1024px){.blog__title-top{margin-bottom:10px}}.blog__description{margin-bottom:60px;opacity:.9}@media only screen and (max-width:1024px){.blog__description{margin-bottom:30px}}.blog__description-top{opacity:.75}.blog__btn{padding:0;border:none;opacity:.8;color:#fff}.blog__btn:hover{opacity:.3;color:#fff}.blog__btn--is-close{font-size:40px;border:none;background:0 0;opacity:.4}.card__element,.slider__img{background-repeat:no-repeat}@media only screen and (max-width:560px){.blog__description-top{margin-bottom:0}.blog__btn--is-close{font-size:30px}}@media only screen and (max-width:415px){.blog__description-top{margin-bottom:0}.blog__btn--is-close{font-size:30px}}.blog__arrow{padding-left:15px}.team__background{padding:120px 0}@media only screen and (max-width:1024px){.team__background{padding:70px 0}}@media only screen and (max-width:824px){.team__background{padding:50px 0}}.team__title{text-align:center}.team__text{margin-bottom:120px;text-align:center;text-transform:uppercase;opacity:.62}.team__row{-ms-flex-wrap:wrap;flex-wrap:wrap}.card__unit{display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-bottom:30px}.card__unit:hover .card__element{visibility:visible;opacity:1;-webkit-transition:all .5s ease;-o-transition:all .5s ease;transition:all .5s ease}.card__link{position:relative}.card__element{padding:25px 50px 0;position:absolute;top:35%;right:1%;visibility:hidden;opacity:0;background-image:url(../img/team-background.png);background-position:center;background-size:contain}@media only screen and (max-width:1024px){.card__element{width:90%;top:30%;right:5%;visibility:visible;opacity:1}}@media only screen and (max-width:768px){.card__element{padding:50px;width:80%;top:27%;right:10%;visibility:visible;opacity:1}}@media only screen and (max-width:824px){.card__element{padding:50px;width:80%;top:27%;right:10%;visibility:visible;opacity:1}}@media only screen and (max-width:736px){.card__element{padding:50px;width:80%;top:37%;right:10%;visibility:visible;opacity:1}}@media only screen and (max-width:640px){.card__element{padding:50px;width:80%;top:38%;right:10%;visibility:visible;opacity:1}}@media only screen and (max-width:415px){.card__element{padding:40px;width:90%;top:34%;right:5%;visibility:visible;opacity:1}}.card__title{margin-bottom:25px;padding-top:20px;opacity:.95}@media only screen and (max-width:1024px){.card__title{margin-bottom:15px}}.card__title--latina{font-size:15px;font-style:italic;color:#767070}.card__description{margin-bottom:35px;opacity:.8}@media only screen and (max-width:1024px){.card__description{margin-bottom:10px}}.card__list{margin-bottom:20px;display:-webkit-box;display:-ms-flexbox;display:flex}.slider__description,.slider__title{margin-bottom:30px;text-align:center}.card__item{padding-right:15px}.card__social{opacity:.7;color:#000}.team-say__background{padding:120px 0;position:relative;background-color:#f8fafa}@media only screen and (max-width:1024px){.team-say__background{padding:70px 0}}@media only screen and (max-width:824px){.team-say__background{padding:50px 0}}.team-say__title{text-align:center}.team-say__text{text-align:center;text-transform:uppercase;opacity:.62}.team-say__slider ul{padding-left:220px;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}@media only screen and (max-width:768px){.team-say__slider ul{padding:0;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}.slider__element{display:-webkit-box!important;display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.slider__img{width:42%;text-align:center;background-image:url(../img/feedback-background.jpg);background-position:50% 30%}@media only screen and (max-width:415px){.slider__element{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.slider__img{width:100%}}.slider__box{width:58%;padding:28px 0 40px 40px}@media only screen and (max-width:1024px){.slider__box{padding:28px 0 40px 40px}}@media only screen and (max-width:768px){.slider__box{padding:0 0 0 50px}}@media only screen and (max-width:736px){.slider__img{background:0 0}.slider__box{padding:0}}@media only screen and (max-width:415px){.slider__box{padding:0 0 10px;width:100%}}.slider__comment{padding:95px 75px 70px 85px;background-color:#eff0f2}@media only screen and (max-width:1024px){.slider__comment{padding:75px 50px 60px}}@media only screen and (max-width:768px){.slider__comment{padding:40px 25px 85px}.slick-arrow{display:none!important}}@media only screen and (max-width:415px){.slider__comment{padding:20px}}@media only screen and (max-width:736px){.slider__comment{padding:20px}.slider__title{font-size:16px}}.slider__title--italic{font-style:italic;font-size:15px;opacity:.95;color:#787878}.slider__description{opacity:.7}@media only screen and (max-width:736px){.slider__title--italic{font-size:14px}.slider__description{font-size:15px}}.team-say-slide{margin:0 auto 45px;-webkit-box-shadow:2px 6px 24px 0 rgba(0,0,0,.17);box-shadow:2px 6px 24px 0 rgba(0,0,0,.17)}.slick-arrow{margin:0;padding-top:3px;width:55px;height:55px;position:absolute;bottom:14%;z-index:10;font-size:35px;text-align:center;vertical-align:middle;cursor:pointer;border:none;background-color:#fff;color:#b2b2b2}.slick-arrow:active,.slick-arrow:hover{background-color:#71f6eb;color:#25514d}@media only screen and (max-width:824px){.slick-arrow{display:none!important}}.contact__box,.rating{display:-webkit-box;display:-ms-flexbox}.left-arrow{right:19%}@media only screen and (max-width:1443px){.left-arrow{right:15%}}@media only screen and (max-width:1248px){.left-arrow{right:10%}}@media only screen and (max-width:1024px){.slick-arrow{bottom:10%}.left-arrow{right:13%}}.right-arrow{right:13.5%}@media only screen and (max-width:1443px){.right-arrow{right:9.5%}}@media only screen and (max-width:1248px){.right-arrow{right:4%}}.rating{display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.rating__btn{border:none;background:0 0;outline:0!important}.rating__star{margin-right:5px;color:#56605f}.rating__star--active{color:#f2da3b}.company{padding:100px 0}.contact__background{padding:120px 0;background-image:url(../img/contact-background.jpg);background-repeat:no-repeat;background-position:center;background-size:cover}@media only screen and (max-width:1024px){.right-arrow{right:5%}.contact__background{padding:70px 0}}@media only screen and (max-width:824px){.contact__background{padding:50px 0}}@media only screen and (max-width:768px){.contact__container{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}}.contact__box,.form__box{-ms-flex-direction:column;background-color:rgba(0,0,0,.71)}.contact__box{padding:35px 15px 20px;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.footer__box,.form__box{display:-webkit-box;display:-ms-flexbox;-webkit-box-orient:vertical;-webkit-box-direction:normal}.contact__box span{padding-left:10px;color:rgba(255,255,255,.7)}.contact__fax{margin-bottom:35px}.contact__mail{margin-bottom:20px}.contact__map{padding-left:5px;width:100%;height:225px}.form__box{padding:0 25px 35px;display:flex;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.form__field,.form__massage{width:100%;border:none;background-color:transparent}.form__field{padding:20px 10px 20px 0;border-bottom:2px solid #606e77}.form__field::-webkit-input-placeholder{font-size:15px;opacity:.6;color:#fff}.form__field:-ms-input-placeholder{font-size:15px;opacity:.6;color:#fff}.form__field::-ms-input-placeholder{font-size:15px;opacity:.6;color:#fff}.form__field::placeholder{font-size:15px;opacity:.6;color:#fff}.form__massage{margin-bottom:35px;padding:45px 10px 0 0;border-bottom:2px solid #606e77}.form__massage::-webkit-input-placeholder{font-size:15px;opacity:.6;color:#fff}.form__massage:-ms-input-placeholder{font-size:15px;opacity:.6;color:#fff}.form__massage::-ms-input-placeholder{font-size:15px;opacity:.6;color:#fff}.form__massage::placeholder{font-size:15px;opacity:.6;color:#fff}.form__btn{width:245px;border:none;background-color:#71f6eb;color:rgba(0,0,0,.7)}.form__btn:hover{color:#fff}.footer__background{padding:90px 0;background-color:#262b2e}@media only screen and (max-width:768px){.form__btn{width:100%}.footer__background{padding:50px 0}}.footer__box{display:flex;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer__title{margin-bottom:15px;text-transform:uppercase;opacity:.8;color:#fff}.footer__copywrite,.social__link{text-align:center;opacity:.4;color:#fff}.social__list{display:-webkit-box;display:-ms-flexbox;display:flex}.social__item{margin-right:10px}.social__link{padding-top:5px;width:45px;height:40px;display:block;font-size:23px;background-color:#424648}.social__link:hover{opacity:1;color:#000;background-color:#71f6eb}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
